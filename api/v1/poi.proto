syntax = "proto3";

package api.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/grntlduck-cloud/go-grpc-geohasing-service-sample/adapter/grpc/poiv1";

// google and gRPC gateway documentation
// 1. helpful documentation https://buf.build/grpc-ecosystem/grpc-gateway/docs/main:grpc.gateway.protoc_gen_openapiv2.options#grpc.gateway.protoc_gen_openapiv2.options
// 2. https://grpc-ecosystem.github.io/grpc-gateway/docs/mapping/customizing_openapi_output/
// 3. https://github.com/grpc-ecosystem/grpc-gateway
// 4. https://github.com/googleapis/googleapis/blob/master/google/api/http.proto

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "gRPC-Gateway PoI Info Service API definition"
    version: "1.0"
    description:
      "Swagger API of the gRPC-Gateway Service for PoI search (route, "
      "proximity) and info. Transcodes REST (HTTP/JSON) to gRPC "
      "allowing consumption by REST clients."
    contact: {
      name: "gRPC Go Sample Project"
      url: "https://github.com/grntlrduck-cloud/go-grpc-geohashing-service-sample"
    }
    license: {
      name: "Apache-2.0 license"
      url:
        "https://github.com/grntlrduck-cloud/go-grpc-geohashing-service-sample/blob/"
        "main/LICENSE"
    }
  }
  schemes: HTTPS
  consumes: "application/json"
  consumes: "application/x-protobuf"
  produces: "application/json"
  produces: "application/x-protobuf"
  security_definitions: {
    security: {
      key: "OAuth2"
      value: {
        type: TYPE_OAUTH2
        flow: FLOW_ACCESS_CODE
        authorization_url: "https://example.com/oauth/authorize" // TODO
        token_url: "https://example.com/oauth/token" // TODO
        scopes: {
          scope: {
            key: "pois.read"
            value: "Grants read access to poi resources"
          }
        }
      }
    }
  }
  security: {
    security_requirement: {
      key: "OAuth2"
      value: {scope: "pois.read"}
    }
  }
  responses: {
    key: "403"
    value: {
      description: "Returned when the user does not have permission to access the resource."
      schema: {}
    }
  }
  responses: {
    key: "401"
    value: {
      description: "Returned when user is forbidden to access resource."
      schema: {}
    }
  }
  responses: {
    key: "404"
    value: {
      description: "Returned when the resource does not exist."
      schema: {}
    }
  }
  responses: {
    key: "500"
    value: {
      description: "Server error"
      headers: {
        key: "X-Correlation-Id"
        value: {
          description: "Unique event identifier for server requests"
          type: "string"
          format: "uuid"
          default: "\"2438ac3c-37eb-4902-adef-ed16b4431030\""
          pattern: "^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$"
        }
      }
      schema: {
        json_schema: {ref: ".api.v1.ErrorResponse"}
      }
    }
  }
};

message PoI {
  string id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    pattern: "^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-w9A-F]{12}$"
    description: "The unique event identifier for server requests"
    format: "uuid"
    example: "\"2438ac3c-37eb-4902-adef-ed16b4431030\""
  }];
  Coordinate coordinate = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The WGS coordinate representing the center of the center of the PoIs' location"
    example: "{\"lat\": 48.137154, \"lon\": 11.576124 }"
  }];
  optional Coordinate entrance = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The WGS coordinate marking the road entrance to the PoIs' location"
    example: "{\"lat\": 48.137154, \"lon\": 11.576124 }"
  }];
  Address address = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The address of the PoI"
    example: "{\"street\": \"My Street\", \"street_number\": \"1b\", \"zip_code\": 80331, \"city\":  \"Munich\", \"country\": \"Germany\"}"
  }];
  repeated string features = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "A list of free form text of available features and amenities at given location."
    example: "[\"charging\", \"resting\", \"shower\", \"groceries\"]"
  }];
}

message Coordinate {
  double lon = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Longitude of a WGS coordinate."
      example: "11.57"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  double lat = 2 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Latitude of a WGS coordinate."
      example: "48.13"
    },
    (google.api.field_behavior) = REQUIRED
  ];
}

message Address {
  string street = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The name of the street"
    example: "\"Biergratenstr.\""
  }];

  string street_number = 2 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "The street number of the given address"
      example: "\"11a\""
    },
    json_name = "street_number"
  ];

  uint32 zip_code = 3 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "The zip code for the given address"
      example: "80331"
    },
    json_name = "zip_code"
  ];

  string city = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The name of the city"
    example: "\"Berlin\""
  }];

  string country = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Alpha3 country code"
    example: "\"DEU\""
  }];
}

message BBox {
  Coordinate sw = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The WGS coordinate defining the south west corner of a bounding box."
    example: "{\"lat\": 48.137154, \"lon\": 11.576124 }"
    field_configuration: {path_param_name: "sw"}
  }];
  Coordinate ne = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The WGS coordinate defining the north east corner of a bounding box."
    example: "{\"lat\": 48.137154, \"lon\": 11.576124 }"
    field_configuration: {path_param_name: "ne"}
  }];
}

message PoIRequest {
  string id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    pattern: "^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-w9A-F]{12}$"
    description: "The unique identifier of a PoI"
    format: "uuid"
    example: "\"2438ac3c-37eb-4902-adef-ed16b4431030\""
  }];
}

message PoIResponse {
  PoI poi = 1;
}

message ProximityRequest {
  Coordinate center = 1 [(google.api.field_behavior) = REQUIRED];
}

message ProximityResponse {
  repeated PoI items = 1;
}

message BBoxRequest {
  BBox bbox = 1 [(google.api.field_behavior) = REQUIRED];
}

message BBoxResponse {
  repeated PoI items = 1;
}

message RouteRequest {
  repeated Coordinate route = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "The coordinate path to search for charging stations in close proximity"
    min_length: 2
    max_length: 100
  }];
}

message RouteResponse {
  repeated PoI items = 1;
}

message ErrorResponse {
  string correlation_id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    pattern: "^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$"
    title: "x-correlation-id"
    description: "Unique event identifier for server requests"
    format: "uuid"
    example: "\"2438ac3c-37eb-4902-adef-ed16b4431030\""
  }];
  ErrorObject error = 2;
}

message ErrorObject {
  int32 code = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    pattern: "^[0-9]$"
    description: "Response code"
    format: "integer"
  }];
  string message = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    pattern: "^[a-zA-Z0-9]{1, 32}$"
    description: "Response message"
  }];
}

service PoIService {
  rpc PoI(PoIRequest) returns (PoIResponse) {
    option (google.api.http) = {get: "/api/v1/pois/info/{id}"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      parameters: {
        headers: [
          {
            name: "X-Correlation-Id"
            description: "Unique event identifier for server requests"
            type: STRING
            format: "uuid"
            required: true
          }
        ]
      }
    };
  }

  rpc Proximity(ProximityRequest) returns (ProximityResponse) {
    option (google.api.http) = {get: "/api/v1/pois/proximity"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      parameters: {
        headers: [
          {
            name: "X-Correlation-Id"
            description: "Unique event identifier for server requests"
            type: STRING
            format: "uuid"
            required: true
          }
        ]
      }
    };
  }

  rpc BBox(BBoxRequest) returns (BBoxResponse) {
    option (google.api.http) = {get: "/api/v1/pois/bbox"};
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      parameters: {
        headers: [
          {
            name: "X-Correlation-Id"
            description: "Unique event identifier for server requests"
            type: STRING
            format: "uuid"
            required: true
          }
        ]
      }
    };
  }

  rpc Route(RouteRequest) returns (RouteResponse) {
    option (google.api.http) = {
      post: "/api/v1/pois/route"
      body: "route"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      parameters: {
        headers: [
          {
            name: "X-Correlation-Id"
            description: "Unique event identifier for server requests"
            type: STRING
            format: "uuid"
            required: true
          }
        ]
      }
    };
  }
}
